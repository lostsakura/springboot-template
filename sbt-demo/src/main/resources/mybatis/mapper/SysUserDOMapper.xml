<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ls.sys.auth.mapper.SysUserDOMapper">
<!--    <cache-ref namespace="com.ls.sys.auth.mapper.SysRoleDOMapper"/>-->
<!--    <cache eviction="FIFO" flushInterval="60000" size="512" readOnly="false" type="org.mybatis.caches.ehcache.EhcacheCache"/>-->

    <resultMap id="BaseResultMap" type="com.ls.sys.auth.domain.DO.SysUserDO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_password" jdbcType="VARCHAR" property="userPassword"/>
        <result column="user_email" jdbcType="VARCHAR" property="userEmail"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="user_info" jdbcType="LONGVARCHAR" property="userInfo"/>
        <result column="user_avatar" jdbcType="LONGVARBINARY" property="userAvatar"/>
    </resultMap>

    <!-- 开启缓存后需要设置fetchType="eager"，全局的懒加载也需要关闭 -->
    <resultMap id="UserRoleMap" type="com.ls.sys.auth.domain.DO.SysUserDO" extends="BaseResultMap">
        <collection property="roleList" fetchType="eager"
                    select="com.ls.sys.auth.mapper.SysRoleDOMapper.selectSysRoleDOBySysUserId"
                    column="{userId=id}"/>
    </resultMap>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from sys_user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.ls.sys.auth.domain.DO.SysUserDO">
        insert into sys_user (id, user_name, user_password,
                              user_email, create_time, user_info,
                              user_avatar)
        values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR},
                #{userEmail,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{userInfo,jdbcType=LONGVARCHAR},
                #{userAvatar,jdbcType=LONGVARBINARY})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.ls.sys.auth.domain.DO.SysUserDO">
        update sys_user
        set user_name     = #{userName,jdbcType=VARCHAR},
            user_password = #{userPassword,jdbcType=VARCHAR},
            user_email    = #{userEmail,jdbcType=VARCHAR},
            create_time   = #{createTime,jdbcType=TIMESTAMP},
            user_info     = #{userInfo,jdbcType=LONGVARCHAR},
            user_avatar   = #{userAvatar,jdbcType=LONGVARBINARY}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="UserRoleMap">
        select u.id,
               u.user_name,
               u.user_password,
               u.user_email,
               u.create_time,
               u.user_info,
               u.user_avatar
        from sys_user u
        where u.id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="UserRoleMap">
        select u.id,
               u.user_name,
               u.user_password,
               u.user_email,
               u.create_time,
               u.user_info,
               u.user_avatar
        from sys_user u
    </select>
</mapper>